{
    "id": "VZ", 
    "properties": {
        "secretSourcePipelineId": "VZ"
    }, 
    "stages": [
        {
            "id": "i1l", 
            "label": "Extend search fields where 'q' >2", 
            "licensed": true, 
            "script": "/**********************\n* Date: 12/31/2019\n* Author: Kevin M. Butler\n* Query Stage Name: Extend search fields where 'q' >2\n* Purpose: Customer requested the ability to modify MM and QF at query time based on the\n* number of search terms in the query. This function reads the query param, counts the terms,\n* then if the number of search terms is >= 3, MM is modified and QF search fields is increased.\n* Note: Need to verify logic with customer\n***********************/\nfunction (request,response,ctx) {\n  if(!request.hasParam(\"q\"))\n    return;\n  var qparams = request.getFirstParam(\"q\");\n  var qwords = qparams.split(\" \");\n  request.putSingleParam(\"qwords\",qwords.length);\n  if(qwords.length >=3){\n  \t// remove MM and change to x%\n    request.removeParam(\"mm\");\n    request.addParam(\"mm\",\"90%\");\n    // remove QF parameter and add new search fields\n    request.removeParam(\"qf\");\n    request.addParam(\"qf\",\"title\");\n    request.addParam(\"qf\",\"id\");\n  }\n  else{\n  \trequest.addParam(\"otherStuff\",\"Didn't make the cut\");\n  }\n    return;\n}\n", 
            "secretSourceStageId": "i1l", 
            "skip": true, 
            "type": "javascript-query"
        }, 
        {
            "id": "m7", 
            "label": "CTX (context) example", 
            "licensed": true, 
            "script": "function (request,response,ctx){\n\tctx.put(\"myContext\",\"Goobers\");\n    newField = ctx.get(\"myContext\");\n    request.addParam(\"newField\",newField);\n  \t\n}", 
            "secretSourceStageId": "m7", 
            "skip": false, 
            "type": "javascript-query"
        }, 
        {
            "id": "70325d34-254e-42bc-b7f5-ad40bcb3e67e", 
            "licensed": true, 
            "overlaps": "ALL", 
            "paramToTag": "q", 
            "params": [], 
            "phraseBoost": 2.0, 
            "phraseSlop": 10, 
            "phrase_boosting_enabled": true, 
            "secretSourceStageId": "70325d34-254e-42bc-b7f5-ad40bcb3e67e", 
            "skip": false, 
            "spell_corrections_enabled": true, 
            "synonymExpansionBoost": 2.0, 
            "synonym_expansion_enabled": true, 
            "tail_rewrites_enabled": true, 
            "type": "text-tagger", 
            "useEmbeddedSolrServer": false
        }, 
        {
            "id": "muga", 
            "label": "Add URL to query request", 
            "licensed": true, 
            "script": "/**********************\n* Date: 11/25/2019\n* Author: Kevin M. Butler\n* Purpose: Add the parameter value from the UI sumbitted as URL (change to suit need)\n*   The javascipt appends the url value to the main q value to be submitted to the rules engine.\n*   Later, in the pipeline just before the Solr stage, it will be removed so the original query gets processed. \n*   The purpose of appending the URL is to trigger rules 'search terms' but is not needed in the final query.\n***********************/\n\nfunction doWork(request){\n  // Get url if available\n  var url = request.getFirstParam('url');\n  \n  // Get original query and save. \n  var origQuery = request.getFirstParam('q');\n  \n  // Check url for null. If null return origQuery else return url and origQuery together as newQuery\n  var newQuery = (url != null) ? origQuery + \" \" + url : origQuery;\n  \n  // If the user entered search terms not equal to wildcards, set q to combined terms and url and set origQuery for later use\n  if (origQuery != '*:*' && origQuery != '*'){\n    request.putSingleParam('q',newQuery);\n    request.putSingleParam('origQuery',origQuery);\n    request.putSingleParam('rulesQuery',newQuery);\n  }\n  // User used *:* or *. Set q back to originalQuery and save the origQuery\n  else{\n  \trequest.putSingleParam('q',newQuery);\n    request.putSingleParam('origQuery',origQuery);\n    request.putSingleParam('rulesQuery',newQuery);\n  }\n\n}", 
            "secretSourceStageId": "muga", 
            "skip": false, 
            "type": "javascript-query"
        }, 
        {
            "id": "7rm", 
            "label": "Show popularity calculation in response", 
            "licensed": true, 
            "params": [
                {
                    "key": "popularityCalc", 
                    "policy": "append", 
                    "value": "sum(div(log(popularity),60),1)"
                }
            ], 
            "secretSourceStageId": "7rm", 
            "skip": false, 
            "type": "set-params"
        }, 
        {
            "id": "ylx", 
            "label": "Highlight for testing purposes", 
            "licensed": true, 
            "params": [
                {
                    "key": "hl", 
                    "policy": "append", 
                    "value": "on"
                }, 
                {
                    "key": "hl.fl", 
                    "policy": "append", 
                    "value": "*"
                }, 
                {
                    "key": "hl.snippets", 
                    "policy": "append", 
                    "value": "3"
                }
            ], 
            "secretSourceStageId": "ylx", 
            "skip": false, 
            "type": "set-params"
        }, 
        {
            "id": "ung", 
            "label": "Boost on ContentType using 'boost'", 
            "licensed": true, 
            "params": [
                {
                    "key": "boost", 
                    "policy": "append", 
                    "value": "map(query({!field f='contentType' v='d'}),0,0,1,1.4)"
                }, 
                {
                    "key": "boost", 
                    "policy": "append", 
                    "value": "map(query({!field f='contentType' v='x'}),0,0,1,1.3)"
                }, 
                {
                    "key": "boost", 
                    "policy": "append", 
                    "value": "map(query({!field f='contentType' v='a'}),0,0,1,1.2)"
                }, 
                {
                    "key": "boost", 
                    "policy": "append", 
                    "value": "map(query({!field f='contentType' v='s'}),0,0,1,1.0)"
                }
            ], 
            "secretSourceStageId": "ung", 
            "skip": false, 
            "type": "set-params"
        }, 
        {
            "id": "xv", 
            "label": "Boost on AgeInDays", 
            "licensed": true, 
            "params": [
                {
                    "key": "boost", 
                    "policy": "append", 
                    "value": "sum(1,recip(ageInDays,40,10000,10000))"
                }, 
                {
                    "key": "boost", 
                    "policy": "append", 
                    "value": "if(and(lte(ageInDays,30),eq(contentType_s,\"device\")),2,1)"
                }
            ], 
            "secretSourceStageId": "xv", 
            "skip": true, 
            "type": "set-params"
        }, 
        {
            "condition": "", 
            "id": "cjf", 
            "label": "Popularity Boost", 
            "licensed": true, 
            "params": [
                {
                    "key": "bf", 
                    "policy": "append", 
                    "value": "sum(div(log(popularity),60),1)"
                }
            ], 
            "secretSourceStageId": "cjf", 
            "skip": true, 
            "type": "set-params"
        }, 
        {
            "aggrType": "click@doc_id,filters,query", 
            "boostId": "id", 
            "boostingMethod": "query-param", 
            "boostingParam": "boost", 
            "id": "efb616e5-14c1-4757-8b59-5a45b05b637d", 
            "licensed": true, 
            "numRecommendations": 10, 
            "numSignals": 100, 
            "queryParams": [
                {
                    "key": "qf", 
                    "value": "query_t"
                }, 
                {
                    "key": "pf", 
                    "value": "query_t^50"
                }, 
                {
                    "key": "pf", 
                    "value": "query_t~3^20"
                }, 
                {
                    "key": "pf2", 
                    "value": "query_t^20"
                }, 
                {
                    "key": "pf2", 
                    "value": "query_t~3^10"
                }, 
                {
                    "key": "pf3", 
                    "value": "query_t^10"
                }, 
                {
                    "key": "pf3", 
                    "value": "query_t~3^5"
                }, 
                {
                    "key": "boost", 
                    "value": "map(query({!field f=query_s v=$q}),0,0,1,20)"
                }, 
                {
                    "key": "mm", 
                    "value": "50%"
                }, 
                {
                    "key": "defType", 
                    "value": "edismax"
                }, 
                {
                    "key": "sort", 
                    "value": "score desc, weight_d desc"
                }
            ], 
            "rollupField": "doc_id_s", 
            "rollupWeightField": "weight_d", 
            "rollupWeightStrategy": "max", 
            "scaleRange": {
                "scaleMax": 1.13, 
                "scaleMin": 1.03
            }, 
            "secretSourceStageId": "efb616e5-14c1-4757-8b59-5a45b05b637d", 
            "skip": true, 
            "type": "recommendation", 
            "weightExpression": "math:log(weight_d + 1) + 10 * math:log(score+1)"
        }, 
        {
            "id": "5v", 
            "label": "Phrase Matching", 
            "licensed": true, 
            "params": [
                {
                    "key": "pf", 
                    "policy": "append", 
                    "value": "title^1.1"
                }
            ], 
            "secretSourceStageId": "5v", 
            "skip": false, 
            "type": "set-params"
        }, 
        {
            "id": "259cb953-fc6c-48b4-9655-57c9d76274c2", 
            "licensed": true, 
            "queryFields": [], 
            "returnFields": [
                "*", 
                "score", 
                "$popularityCalc"
            ], 
            "rows": 10, 
            "secretSourceStageId": "259cb953-fc6c-48b4-9655-57c9d76274c2", 
            "skip": false, 
            "start": 0, 
            "type": "search-fields"
        }, 
        {
            "fieldFacets": [
                {
                    "field": "{!ex=dt key=Content_Type}contentType", 
                    "minCount": 1, 
                    "missing": false
                }
            ], 
            "id": "bd415dd0-7994-4f19-958d-5c4cf109fc80", 
            "label": "Rename Facet for display purposes", 
            "licensed": true, 
            "properties": {
                "autoCreated": true
            }, 
            "secretSourceStageId": "bd415dd0-7994-4f19-958d-5c4cf109fc80", 
            "skip": false, 
            "type": "facet"
        }, 
        {
            "id": "1q9", 
            "label": "Facet Pivoting Example", 
            "licensed": true, 
            "params": [
                {
                    "key": "facet.pivot", 
                    "policy": "append", 
                    "value": "contentType,title,popularity"
                }
            ], 
            "secretSourceStageId": "1q9", 
            "skip": false, 
            "type": "set-params"
        }, 
        {
            "handler": "select", 
            "headers": [], 
            "id": "42e70f27-b7a1-473e-adb5-35068675a1c6", 
            "licensed": true, 
            "matchPartialFilterQueries": true, 
            "method": "POST", 
            "params": [], 
            "secretSourceStageId": "42e70f27-b7a1-473e-adb5-35068675a1c6", 
            "skip": false, 
            "type": "query-rules", 
            "useEmbeddedSolrServer": false, 
            "useOriginalQueryIfNoRulesMatch": true
        }, 
        {
            "id": "47p", 
            "label": "Remove URL from query request ", 
            "licensed": true, 
            "script": "/**********************\n* Date: 11/25/2019\n* Author: Kevin M. Butler\n* Purpose: Remove the previously appended URL from the query before sending to the Solr stage\n***********************/\nfunction doWork(request){\n  var origQuery = request.getFirstParam('origQuery');\n  request.putSingleParam('q',origQuery);\n}", 
            "secretSourceStageId": "47p", 
            "skip": false, 
            "type": "javascript-query"
        }, 
        {
            "allowFederatedSearch": false, 
            "httpMethod": "POST", 
            "id": "d33d6409-2cb5-4342-810e-a7e637e92470", 
            "licensed": true, 
            "responseSignalsEnabled": true, 
            "secretSourceStageId": "d33d6409-2cb5-4342-810e-a7e637e92470", 
            "skip": false, 
            "type": "solr-query"
        }, 
        {
            "facetLabelParseDelimiter": "||", 
            "id": "656c42a7-3c31-41bc-a887-1c3b9315547c", 
            "licensed": true, 
            "secretSourceStageId": "656c42a7-3c31-41bc-a887-1c3b9315547c", 
            "skip": false, 
            "type": "query-rules-augment-response"
        }
    ]
}